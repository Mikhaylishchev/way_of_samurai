{"version":3,"file":"static/js/331.8163388d.chunk.js","mappings":"kMACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA0I,wBAA1I,EAA4K,yBAA5K,EAA8M,wBAA9M,EAAuP,gC,mBCmBvP,EAhBmB,SAACA,GAElB,OAEE,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WAEE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKH,EAAMI,QAAU,wBAAyBC,IAAI,cAEzD,SAAC,KAAD,CAASC,GAAE,oBAAeN,EAAMO,IAAhC,SAAuCP,EAAMQ,aCFrD,EAToB,SAACR,GAEnB,OAEE,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMS,Q,iDCEhCC,GAAcC,EAAAA,EAAAA,IAAkB,IAqDhCC,GAA6BC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,gCAAlBD,EAZL,SAACb,GAE7B,OAEE,kBAAMe,SAAUf,EAAMgB,aAAtB,WAEE,0BAAK,SAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,GAAeT,GAAcU,UAAWC,EAAAA,EAAUb,KAAK,iBAAiBc,YAAY,0BAC3G,0BAAK,6CAMX,EApDgB,SAACtB,GAEf,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAA4BpB,KAAMoB,EAAOpB,KAAMD,GAAIqB,EAAOrB,GAAIH,OAAQwB,EAAOxB,QAA5DwB,EAAOrB,OAEtEsB,EAAmBN,EAAMO,QAAQH,KAAI,SAAAI,GAAO,OAAI,SAAC,EAAD,CAA8BtB,KAAMsB,EAAQA,SAA1BA,EAAQxB,OAQ9E,OAEEP,EAAMgC,QAEJ,iBAAK/B,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAEGuB,KAIH,2BAEGI,GAED,SAACjB,EAAD,CAA4BG,SApBd,SAACkB,GAErBjC,EAAMkC,YAAYD,EAAOE,0BAwBrB,SAAC,KAAD,CAAU7B,GAAG,Y,0DC1CjB8B,EAA6B,SAACb,GAE9B,MAAO,CAELS,OAAQT,EAAMc,KAAKL,SCqBzB,GAAeM,E,QAAAA,KAEbC,EAAAA,EAAAA,KAzBoB,SAAChB,GAErB,MAAO,CAELC,YAAaD,EAAMC,gBAQE,SAACgB,GAExB,MAAO,CAELN,YAAa,SAACC,GAEZK,GAASC,EAAAA,EAAAA,GAAmBN,UDZF,SAACO,GAAe,IAEtCC,EAFqC,0IAIvC,WAEI,OAAIC,KAAK5C,MAAMgC,QAER,SAACU,GAAD,UAAeE,KAAK5C,SAFG,SAAC,KAAD,CAAUM,GAAG,eANR,GAEXuC,EAAAA,WAYhC,OAFqCN,EAAAA,EAAAA,IAASH,EAATG,CAAqCI,KCK9E,CAIEG","sources":["webpack://the_way_of_samurai/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/MessageItem/MessageItem.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__tJ6or\",\"dialogsItems\":\"Dialogs_dialogsItems__EYlQ2\",\"active\":\"Dialogs_active__MH4yD\",\"dialog\":\"Dialogs_dialog__uxSjW\",\"message\":\"Dialogs_message__psxzH\",\"avatar\":\"Dialogs_avatar__91-kJ\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__LYd3S\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../../Dialogs/Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  return(\r\n\r\n    <div className={s.dialog}>\r\n      <div className={s.dialogsWrapper}>\r\n        \r\n        <div className={s.avatar}>\r\n          <img src={props.avatar || 'https://clck.ru/bVQbn'} alt=\"avatar\" />\r\n        </div>\r\n        <NavLink to={`/messages/${props.id}`}>{props.name}</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../../Dialogs/Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n\r\n  return(\r\n\r\n    <div className={s.message}>{props.text}</div>\r\n  )\r\n}\r\n\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { maxLengthCrerator, requiredField } from '../../utils/validators/validators';\r\n\r\nconst maxLength10 = maxLengthCrerator(10);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} avatar={dialog.avatar} />)\r\n\r\n  let messagesElements = state.letters.map(message => <MessageItem key={message.id} text={message.message} />)\r\n\r\n\r\n  const addNewMessage = (values) => {\r\n\r\n    props.sendMessage(values.newMessageText)\r\n  }\r\n\r\n  return (\r\n\r\n    props.isAuth ?\r\n\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n\r\n          {dialogsElements}\r\n\r\n        </div>\r\n\r\n        <div>\r\n\r\n          {messagesElements}\r\n\r\n          <ReduxSendingNewMessageForm onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      : <Navigate to='/login' />\r\n  )\r\n}\r\n\r\nconst SendingNewMessageForm = (props) => {\r\n\r\n  return (\r\n\r\n    <form onSubmit={props.handleSubmit}>\r\n\r\n      <div><Field validate={[requiredField, maxLength10]} component={Textarea} name=\"newMessageText\" placeholder=\"Enter your message\" /></div>\r\n      <div><button>Send</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxSendingNewMessageForm = reduxForm({ form: 'dialogsSendingNewMessageForm' })(SendingNewMessageForm)\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n\r\n    return {\r\n  \r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n\r\n            if(!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        } \r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from \"react-redux\"\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  \r\n  return {\r\n\r\n    dialogsPage: state.dialogsPage,\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  \r\n  return {\r\n\r\n    sendMessage: (newMessageText) => {\r\n\r\n      dispatch(sendMessageCreator(newMessageText));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"names":["props","className","s","src","avatar","alt","to","id","name","text","maxLength10","maxLengthCrerator","ReduxSendingNewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","requiredField","component","Textarea","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","letters","message","isAuth","values","sendMessage","newMessageText","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}